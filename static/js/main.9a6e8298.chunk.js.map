{"version":3,"sources":["serviceWorker.js","component/Header.jsx","util/fakedb.js","component/NoteItem.jsx","component/Board.jsx","component/Container.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Header","handleAddBtnClick","props","onAddBtnClick","classes","this","AppBar","className","header","position","Toolbar","Typography","variant","title","IconButton","addBtn","edge","color","onClick","AddCircleOutline","addIcon","React","Component","withStyles","minHeight","display","justifyContent","marginLeft","fontWeight","width","height","debounce","func","delay","timer","context","args","arguments","clearTimeout","setTimeout","apply","findAll","JSON","parse","localStorage","getItem","findAllAsArray","objData","Object","keys","map","key","id","text","sort","a","b","Number","saveMemo","appData","undefined","data","result","forEach","generateId","setItem","stringify","NoteItem","handleDeleteClicked","onDelete","state","handleTitleChange","event","value","target","setState","onTitleChange","handleTextChange","onTextChange","noteItem","style","backgroundColor","transform","rotateDirection","noteHeader","noteTitleInput","onChange","btnDelete","noteBodyInput","minWidth","maxWidth","maxHeight","border","outline","boxShadow","flexDirection","background","padding","flexGrow","margin","resize","Board","fetchData","length","noDataMessage","boardContainer","item","allData","deleteById","gridTemplateColumns","gridGap","boardItem","paddingTop","alignItems","fontSize","marginTop","Container","boardRef","ref","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a6e8298.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport { AddCircleOutline } from '@material-ui/icons';\r\n\r\nclass Header extends React.Component {\r\n\r\n\thandleAddBtnClick = () => {\r\n\t\tif (this.props.onAddBtnClick) {\r\n\t\t\tthis.props.onAddBtnClick();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t  <AppBar className={classes.header} position={\"static\"}>\r\n\t\t\t  <Toolbar>\r\n\t\t\t\t  <Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\t  React Memo\r\n\t\t\t\t  </Typography>\r\n\t\t\t\t  <IconButton\r\n\t\t\t\t\tclassName={classes.addBtn}\r\n\t\t\t\t\ttitle={\"Add new note\"}\r\n\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\tonClick={this.handleAddBtnClick}\r\n\t\t\t\t  >\r\n\t\t\t\t\t  <AddCircleOutline className={classes.addIcon}/>\r\n\t\t\t\t  </IconButton>\r\n\r\n\t\t\t  </Toolbar>\r\n\t\t  </AppBar>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst styles = {\r\n\theader: {\r\n\t\tminHeight: '5em',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'center',\r\n\t},\r\n\taddBtn: {\r\n\t\tmarginLeft: '1em',\r\n\t\tfontWeight: '2em'\r\n\t},\r\n\taddIcon: {\r\n\t\twidth: '1.5em',\r\n\t\theight: '1.5em'\r\n\t}\r\n};\r\nexport default withStyles(styles)(Header);","export const generateId = () => {\r\n\tconst data = findAll();\r\n\tlet result = 0;\r\n\tObject.keys(data).forEach(key => {\r\n\t\tif (Number(key) > result) {\r\n\t\t\tresult = Number(key);\r\n\t\t}\r\n\t});\r\n\treturn result + 1;\r\n}\r\n\r\nexport const debounce = (func, delay) => {\r\n\tlet timer;\r\n\treturn function () {\r\n\t\tconst context = this;\r\n\t\tconst args = arguments;\r\n\t\tclearTimeout(timer);\r\n\t\ttimer = setTimeout(() => func.apply(context, args), delay);\r\n\t}\r\n}\r\n\r\nexport const findAll = () => {\r\n\treturn JSON.parse(localStorage.getItem('memoAppData') || '{}');\r\n}\r\n\r\nexport const findAllAsArray = () => {\r\n\tconst objData = findAll();\r\n\treturn Object.keys(objData).map(key => ({\r\n\t\tid: key,\r\n\t\ttitle: objData[key].title,\r\n\t\ttext: objData[key].text\r\n\t})).sort((a, b) => Number(a.id) > Number(b.id) ? -1 : 1);\r\n}\r\n\r\nexport const deleteById = (id) => {\r\n\tconst allData = findAll();\r\n\tdelete allData[id];\r\n\tlocalStorage.setItem('memoAppData', JSON.stringify(allData));\r\n}\r\n\r\nexport const saveMemo = (id, title, text) => {\r\n\tconst appData = findAll();\r\n\tif (id && appData[id]) {\r\n\t\tappData[id] = {\r\n\t\t\ttitle: title === undefined ? appData[id].title : title,\r\n\t\t\ttext: text === undefined ? appData[id].text : text\r\n\t\t}\r\n\t} else {\r\n\t\tappData[generateId()] = {\r\n\t\t\ttitle,\r\n\t\t\ttext\r\n\t\t}\r\n\t}\r\n\tlocalStorage.setItem('memoAppData', JSON.stringify(appData));\r\n}","import React from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass NoteItem extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tid: '',\r\n\t\t\ttitle: '',\r\n\t\t\ttext: ''\r\n\t\t}\r\n\t}\r\n\r\n\thandleDeleteClicked = () => {\r\n\t\tif (this.props.onDelete) {\r\n\t\t\tthis.props.onDelete(this.state.id);\r\n\t\t}\r\n\t}\r\n\r\n\thandleTitleChange = event => {\r\n\t\tconst value = event.target.value;\r\n\t\tthis.setState(\r\n\t\t  { title: value },\r\n\t\t  () => {\r\n\t\t\t  if (this.props.onTitleChange) {\r\n\t\t\t\t  this.props.onTitleChange(this.state.id, value);\r\n\t\t\t  }\r\n\t\t  });\r\n\t}\r\n\r\n\thandleTextChange = event => {\r\n\t\tconst value = event.target.value;\r\n\t\tthis.setState(\r\n\t\t  { text: value },\r\n\t\t  () => {\r\n\t\t\t  if (this.props.onTextChange) {\r\n\t\t\t\t  this.props.onTextChange(this.state.id, value);\r\n\t\t\t  }\r\n\t\t  });\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.setState({\r\n\t\t\tid: this.props.id,\r\n\t\t\ttext: this.props.text,\r\n\t\t\ttitle: this.props.title,\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t  <div className={classes.noteItem} style={{\r\n\t\t\t  backgroundColor: this.props.color || '#fff9c7',\r\n\t\t\t  transform: this.props.rotateDirection === 'right' ? 'rotate(3deg)' : 'rotate(-3deg)'\r\n\t\t  }}>\r\n\t\t\t  <div className={classes.noteHeader}>\r\n\t\t\t\t  <input\r\n\t\t\t\t\tclassName={classes.noteTitleInput}\r\n\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\tonChange={this.handleTitleChange}\r\n\t\t\t\t  />\r\n\t\t\t\t  <button\r\n\t\t\t\t\tclassName={classes.btnDelete}\r\n\t\t\t\t\tonClick={this.handleDeleteClicked}\r\n\t\t\t\t  >\r\n\t\t\t\t\t  X\r\n\t\t\t\t  </button>\r\n\t\t\t  </div>\r\n\t\t\t  <textarea\r\n\t\t\t\tclassName={classes.noteBodyInput}\r\n\t\t\t\tvalue={this.state.text}\r\n\t\t\t\tonChange={this.handleTextChange}\r\n\t\t\t  />\r\n\t\t  </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst styles = {\r\n\t  btnDelete: {\r\n\t\t  display: 'inline-block',\r\n\t\t  minWidth: '2.7em',\r\n\t\t  maxWidth: '2.7em',\r\n\t\t  minHeight: '2.7em',\r\n\t\t  maxHeight: '2.7em',\r\n\t\t  backgroundColor: 'rgba(255, 255, 255, 0.0)',\r\n\t\t  border: '0',\r\n\t\t  fontWeight: '700',\r\n\t\t  color: 'red',\r\n\t\t  '&:hover': {\r\n\t\t\t  backgroundColor: 'rgba(255, 255, 255, 0)'\r\n\t\t  },\r\n\t\t  '&:focus': {\r\n\t\t\t  outline: 'none'\r\n\t\t  }\r\n\t  },\r\n\t  noteHeader: {\r\n\t\t  display: 'flex',\r\n\t\t  justifyContent: 'space-between',\r\n\t\t  backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n\r\n\t  },\r\n\t  noteItem: {\r\n\t\t  height: '15em',\r\n\t\t  boxShadow: '5px 10px 18px #888888',\r\n\t\t  display: 'flex',\r\n\t\t  flexDirection: 'column',\r\n\t\t  justifyContent: 'flex-start',\r\n\t  },\r\n\t  noteTitleInput: {\r\n\t\t  background: 'rgba(0, 0, 0, 0)',\r\n\t\t  border: 'none',\r\n\t\t  padding: '0.2em 0.5em',\r\n\t\t  height: '2.7em',\r\n\t\t  fontWeight: '600',\r\n\t\t  flexGrow: '1',\r\n\t\t  // flexBasis: '70%',\r\n\t\t  display: 'inline-block',\r\n\t\t  minWidth: 0,\r\n\t\t  '&:focus': {\r\n\t\t\t  outline: 'none'\r\n\t\t  }\r\n\t  },\r\n\t  noteBodyInput: {\r\n\t\t  border: 'none',\r\n\t\t  background: 'rgba(0, 0, 0, 0)',\r\n\t\t  margin: '0.5em',\r\n\t\t  resize: 'none',\r\n\t\t  flexGrow: 1,\r\n\t\t  display: 'block',\r\n\t\t  '&:focus': {\r\n\t\t\t  outline: 'none'\r\n\t\t  }\r\n\t  }\r\n  }\r\n;\r\nexport default withStyles(styles)(NoteItem);","import React from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { debounce, deleteById, findAllAsArray, saveMemo } from '../util/fakedb';\r\nimport NoteItem from './NoteItem';\r\nimport { AddCircleOutline } from '@material-ui/icons';\r\n\r\nclass Board extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata: []\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.fetchData();\r\n\t}\r\n\r\n\tfetchData = () => {\r\n\t\tthis.setState({\r\n\t\t\tdata: findAllAsArray()\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst { data } = this.state;\r\n\t\treturn (\r\n\t\t  <>\r\n\t\t\t  {data.length === 0 ?\r\n\t\t\t\t<div\r\n\t\t\t\t  className={classes.noDataMessage}\r\n\t\t\t\t  onClick={() => {\r\n\t\t\t\t\t  saveMemo(undefined, '', '');\r\n\t\t\t\t\t  this.fetchData();\r\n\t\t\t\t  }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>There is no memo, create a new one now</div>\r\n\t\t\t\t\t<AddCircleOutline className={classes.addIcon}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<></>\r\n\t\t\t  }\r\n\t\t\t  <div className={classes.boardContainer}>\r\n\r\n\t\t\t\t  {data.map((item) =>\r\n\t\t\t\t\t<NoteItem\r\n\t\t\t\t\t  key={`noteItem#${item.id}`}\r\n\t\t\t\t\t  id={item.id}\r\n\t\t\t\t\t  title={item.title}\r\n\t\t\t\t\t  text={item.text}\r\n\t\t\t\t\t  onTitleChange={\r\n\t\t\t\t\t\t  debounce((id, title) => {\r\n\t\t\t\t\t\t\t  saveMemo(id, title, undefined);\r\n\t\t\t\t\t\t\t  this.fetchData();\r\n\t\t\t\t\t\t  }, 500)\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  onTextChange={\r\n\t\t\t\t\t\t  debounce((id, text) => {\r\n\t\t\t\t\t\t\t  saveMemo(id, undefined, text);\r\n\t\t\t\t\t\t\t  this.fetchData();\r\n\t\t\t\t\t\t  }, 500)\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  onDelete={id => {\r\n\t\t\t\t\t\t  deleteById(id);\r\n\t\t\t\t\t\t  this.fetchData();\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t  )}\r\n\t\t\t  </div>\r\n\t\t  </>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst styles = {\r\n\tboardContainer: {\r\n\t\tpadding: '5em 3em 5em 3em',\r\n\t\tminWidth: '400px',\r\n\t\tdisplay: 'grid',\r\n\t\tgridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))',\r\n\t\tgridGap: '3em',\r\n\t\tbackgroundColor: '#f5f5f5',\r\n\t\tflexGrow: 1\r\n\t},\r\n\tboardItem: {\r\n\t\tborder: '1px solid black',\r\n\t\tminHeight: '10em',\r\n\t},\r\n\tnoDataMessage: {\r\n\t\tbackgroundColor: '#f5f5f5',\r\n\t\tdisplay: 'flex',\r\n\t\tpaddingTop: '10%',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\theight: '100%',\r\n\t\tfontWeight: '600',\r\n\t\tcolor: '#c6ccc7',\r\n\t\tfontSize: '2em'\r\n\t},\r\n\taddIcon: {\r\n\t\tmarginTop: '1em',\r\n\t\twidth: '5em',\r\n\t\theight: '5em'\r\n\t}\r\n};\r\nexport default withStyles(styles)(Board);","import React from \"react\";\r\nimport Header from './Header';\r\nimport Board from './Board';\r\nimport { saveMemo } from '../util/fakedb';\r\n\r\nclass Container extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t  <>\r\n\t\t\t  <Header\r\n\t\t\t\tonAddBtnClick={() => {\r\n\t\t\t\t\tsaveMemo(undefined, '', '');\r\n\t\t\t\t\tthis.boardRef.fetchData();\r\n\t\t\t\t}}/>\r\n\t\t\t  <Board ref={ref => {\r\n\t\t\t\t  this.boardRef = ref;\r\n\t\t\t  }}/>\r\n\t\t  </>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Container;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Container from './component/Container.jsx'\n\n// const mountpoint = document.createElement(\"div\");\n// document.body.appendChild(mountpoint);\nReactDOM.render(<Container/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}